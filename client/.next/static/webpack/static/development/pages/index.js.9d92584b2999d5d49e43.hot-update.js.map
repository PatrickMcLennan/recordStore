{"version":3,"file":"static/webpack/static/development/pages/index.js.9d92584b2999d5d49e43.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport {\n  dbLogin,\n  dbRegister,\n  dbLogout,\n  dbAccountEditor,\n  dbCreateRecord,\n  dbDeleteRecord\n} from '../firebase';\nimport { GlobalStyle, Content, theme } from '../components/styles/index.styles';\nimport Meta from '../components/Meta';\nimport Nav from '../components/Nav';\nimport Splash from '../components/Splash';\nimport Store from '../components/Store';\nimport Account from '../components/Account';\nimport AddRecord from '../components/AddRecord';\nimport Loader from '../components/Loader';\nimport { VinylErrorSVG, VinylSuccessSVG } from './../components/VinylSVG';\n\nclass Home extends Component {\n  state = {\n    user: {},\n    page: 'splash',\n    loading: false,\n    error: false,\n    success: false\n  };\n\n  loaded = () => {\n    this.setState({\n      loading: false\n    });\n  };\n\n  showMessage = response => {\n    response === 'error'\n      ? this.setState({ error: true })\n      : this.setState({ success: true });\n    setTimeout(\n      () => this.setState({ loading: false, error: false, success: false }),\n      1500\n    );\n  };\n\n  changePage = nextPage => {\n    const { page } = this.state;\n    page === nextPage ? page : this.setState({ page: nextPage });\n  };\n\n  getUser = async ({ email, password, register }) => {\n    this.setState({ loading: true });\n    const attempt = { email, password };\n    const call = await (register ? dbRegister(attempt) : dbLogin(attempt));\n    call.email ? this.showMessage('success') : this.showMessage('error');\n    this.setState({ user: call });\n    this.changePage('store');\n  };\n\n  editUser = async user => {\n    const editedUser = await dbAccountEditor(user);\n    this.setState({ user: editedUser });\n    this.showMessage('success');\n  };\n\n  logout = () => {\n    dbLogout();\n    this.setState({\n      user: {},\n      page: 'splash',\n      loading: true\n    });\n  };\n\n  createRecord = async record => {\n    const { records } = this.state.user;\n    const newRecord = await dbCreateRecord(record);\n    records.push(newRecord);\n    this.editUser(this.state.user);\n  };\n\n  deleteRecord = async id => {\n    const { email } = this.state.user;\n    const user = await dbDeleteRecord(id, email);\n    this.editUser({ user });\n  };\n\n  renderPage = page => {\n    const { user } = this.state;\n    if (page === 'splash') {\n      return <Splash getUser={this.getUser} loaded={this.loaded} />;\n    } else if (page === 'store') {\n      return (\n        <Store\n          page={page}\n          loaded={this.loaded}\n          user={user}\n          changePage={this.changePage}\n          deleteRecord={this.deleteRecord}\n        />\n      );\n    } else if (page === 'account') {\n      return (\n        <Account\n          page={page}\n          user={user}\n          changePage={this.changePage}\n          editUser={this.editUser}\n        />\n      );\n    } else if (page === 'add') {\n      return (\n        <AddRecord\n          page={page}\n          user={user}\n          changePage={this.changePage}\n          createRecord={this.createRecord}\n        />\n      );\n    }\n  };\n\n  render() {\n    const { page, user, loading, error, success } = this.state;\n    return (\n      <>\n        <Meta />\n        <GlobalStyle />\n        {loading && <Loader />}\n        <Nav\n          user={user.email ? user : null}\n          changePage={this.changePage}\n          logout={this.logout}\n          page={page}\n        />\n        <ThemeProvider theme={theme}>\n          <Content>\n            {this.renderPage(page)}\n            {error && <VinylErrorSVG />}\n            {success && <VinylSuccessSVG />}\n          </Content>\n        </ThemeProvider>\n      </>\n    );\n  }\n}\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAKA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA5HA;AACA;AA8HA;;;;A","sourceRoot":""}