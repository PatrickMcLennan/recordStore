{"version":3,"file":"static/webpack/static/development/pages/index.js.ae6d51c7e145db17f9b2.hot-update.js","sources":["webpack:///./components/Search.js"],"sourcesContent":["import React, { Component } from 'react';\nimport SectionHeader from './SectionHeader';\nimport { RecordGrid, AddHeader } from './styles/Store.styles';\nimport Record from './Record';\nimport Sort from './Sort';\nimport Form from './styles/form.styles';\nimport UserProfile from './styles/userProfile.styles';\nimport Badge from './styles/UserBadge.styles.js';\nimport PropTypes from 'prop-types';\n\nclass Search extends Component {\n  state = {\n    search: '',\n    sort: 'artist',\n    searchedUser: {}\n  };\n\n  changeSort = (property = 'artist') => {\n    const { records } = this.state.searchedUser;\n    const sortedRecords = records.sort((a, b) =>\n      a[property].toLowerCase() > b[property].toLowerCase() ? 1 : -1\n    );\n    this.setState({ records: sortedRecords, sort: property });\n  };\n\n  handleChange = e => {\n    const { value } = e.target;\n    this.setState({\n      search: value\n    });\n  };\n\n  handleSubmit = async e => {\n    const { searchRecords } = this.props;\n    e.preventDefault();\n    if (this.state.search === '') {\n      return null;\n    }\n    const searchedUser = await searchRecords(this.state.search);\n    if (searchedUser.email) {\n      this.setState({\n        searchedUser\n      });\n    } else if (searchUser === null) {\n      this.setState({ search: '' });\n    }\n  };\n\n  render() {\n    const { search, searchedUser } = this.state;\n    const { records, name, email, picture, bio } = searchedUser;\n    return (\n      <>\n        <SectionHeader\n          first={records ? `${name.first}'s` || `${email}'s` : 'Find'}\n          last=\"Store\"\n        />\n        <Sort changeSort={this.changeSort} />\n        <Form data-testid=\"search_form\" onSubmit={this.handleSubmit}>\n          <input\n            data-testid=\"search_input\"\n            type=\"text\"\n            value={search}\n            onChange={this.handleChange}\n          />\n          <input type=\"submit\" value=\"search\" />\n        </Form>\n        <RecordGrid data-testid=\"search_recordGrid\">\n          {email && (\n            <UserProfile data-testid=\"search_userProfile\">\n              <Badge\n                src={picture ? picture : '../static/img/placeholder.png'}\n                alt={name.first ? name.first : email}\n                margin=\"left\"\n                data-testid=\"search_badge\"\n              />\n              <figcaption>\n                <h6 data-testid=\"search_name\">\n                  {name.first} {name.last}\n                </h6>\n                <h6 data-testid=\"search_bio\">{bio}</h6>\n              </figcaption>\n            </UserProfile>\n          )}\n          {records ? (\n            records.map(record => (\n              <Record\n                artist={record.artist}\n                title={record.title}\n                cover={record.cover}\n                key={record.id}\n                id={record.id}\n                showGarbage={false}\n              />\n            ))\n          ) : (\n            <AddHeader data-testid=\"search_addHeader\">\n              Search for stores by email\n            </AddHeader>\n          )}\n        </RecordGrid>\n      </>\n    );\n  }\n}\n\nSearch.propTypes = {\n  searchRecords: PropTypes.func.isRequired\n};\n\nexport default Search;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA7FA;AACA;AA+FA;AACA;AADA;AAIA;;;;A","sourceRoot":""}