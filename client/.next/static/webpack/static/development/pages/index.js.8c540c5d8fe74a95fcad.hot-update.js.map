{"version":3,"file":"static/webpack/static/development/pages/index.js.8c540c5d8fe74a95fcad.hot-update.js","sources":["webpack:///./components/Splash.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Section from './styles/Splash.styles';\nimport Form from './styles/form.styles';\nimport SectionHeader from './SectionHeader';\nimport { VinylPrimarySVG, GithubSVG, LinkedInSVG } from './SVGs';\nimport PropTypes from 'prop-types';\n\nclass Splash extends Component {\n  state = {\n    email: '',\n    password: '',\n    register: false,\n    remember: false\n  };\n\n  async componentDidMount() {\n    this.props.loaded();\n    const user = await JSON.parse(localStorage.getItem('recordStore'));\n    return user\n      ? this.setState({\n          email: user.email,\n          password: user.password,\n          remember: true\n        })\n      : null;\n  }\n\n  handleChange = e => {\n    const { id, value } = e.target;\n    this.setState({\n      [id]: value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { remember } = this.state;\n    const { getUser } = this.props;\n    if (remember) {\n      localStorage.setItem('recordStore', JSON.stringify(this.state));\n    } else if (!remember && localStorage.getItem('recordStore')) {\n      localStorage.removeItem('recordStore');\n    }\n    getUser(this.state);\n  };\n\n  render() {\n    const { email, password, register, remember } = this.state;\n    return (\n      <Section>\n        <div>\n          <VinylPrimarySVG />\n          <h3>Welcome to recordStore</h3>\n          <p>\n            recordStore is a digital library for you to upload your record\n            collection.\n          </p>\n          <div style={{border: \"1px solid red\"}}>\n          <GithubSVG />\n          <LinkedInSVG />\n          </div>\n        </div>\n        <Form onSubmit={this.handleSubmit}>\n          <SectionHeader first=\"Log In\" last=\"Register\" />\n\n          <label htmlFor=\"email\">\n            <input\n              value={email}\n              type=\"email\"\n              required\n              id=\"email\"\n              onChange={this.handleChange}\n            />\n            <p>Email...</p>\n          </label>\n\n          <label htmlFor=\"password\">\n            <input\n              value={password}\n              type=\"password\"\n              required\n              id=\"password\"\n              onChange={this.handleChange}\n            />\n            <p>Password...</p>\n          </label>\n\n          <input\n            type=\"checkbox\"\n            name=\"register\"\n            onChange={() => this.setState({ register: !register })}\n            id=\"register\"\n          />\n          <label htmlFor=\"register\">\n            <p>Register This Email</p>\n          </label>\n\n          <input\n            type=\"checkbox\"\n            name=\"remember\"\n            checked={remember}\n            onChange={() => this.setState({ remember: !remember })}\n            id=\"remember\"\n          />\n          <label htmlFor=\"remember\">\n            <p>Remember Me</p>\n          </label>\n\n          <input type=\"submit\" value=\"Log In\" />\n        </Form>\n      </Section>\n    );\n  }\n}\n\nSplash.propTypes = {\n  getUser: PropTypes.func.isRequired,\n  loaded: PropTypes.func.isRequired\n};\n\nexport default Splash;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAkBA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AADA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;AA7BA;;AACA;AACA;;AADA;AACA;AAEA;AACA;AACA;AAHA;AACA;;;;;;;;;;;;;;;;;AA0BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAzGA;AACA;AA2GA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}