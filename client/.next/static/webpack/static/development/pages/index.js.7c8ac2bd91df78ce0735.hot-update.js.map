{"version":3,"file":"static/webpack/static/development/pages/index.js.7c8ac2bd91df78ce0735.hot-update.js","sources":["webpack:///./components/Store.js"],"sourcesContent":["import React, { Component } from 'react';\nimport SectionHeader from './SectionHeader';\nimport { StoreSection, RecordGrid, AddHeader } from './styles/Store.styles';\nimport Record from './Record';\nimport Sort from './Sort';\nimport PropTypes from 'prop-types';\n\nclass Store extends Component {\n  state = {\n    ...this.props.user,\n    sort: 'artist'\n  };\n\n  componentDidMount() {\n    const { page, loaded } = this.props;\n    if (page === 'store') return loaded();\n  }\n\n  changeSort = (property = 'artist') => {\n    const { records } = this.state;\n    const sortedRecords = records.sort((a, b) =>\n      a[property].toLowerCase() > b[property].toLowerCase() ? 1 : -1\n    );\n    this.setState({ records: sortedRecords, sort: property });\n  };\n\n  updateStore = async id => {\n    const { deleteRecord } = this.props;\n    const user = await deleteRecord(id);\n  };\n\n  render() {\n    const { records } = this.state;\n    const { updateStore } = this.props;\n    return (\n      <StoreSection>\n        <SectionHeader first=\"My\" last=\"Store\" />\n        <Sort changeSort={this.changeSort} />\n        <RecordGrid>\n          {records.length >= 1 ? (\n            records.map(record => (\n              <Record\n                artist={record.artist}\n                title={record.title}\n                cover={record.cover}\n                key={record.id}\n                id={record.id}\n                updateStore={updateStore}\n              />\n            ))\n          ) : (\n            <AddHeader>Get Started by adding some records!</AddHeader>\n          )}\n        </RecordGrid>\n      </StoreSection>\n    );\n  }\n}\n\nStore.propTypes = {\n  page: PropTypes.string.isRequired,\n  loaded: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  changePage: PropTypes.func.isRequired,\n  deleteRecord: PropTypes.func.isRequired\n};\n\nexport default Store;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;;;AAQA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAdA;AAAA;AAAA;AAAA;AAEA;AACA;;;AAeA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAjDA;AACA;AAmDA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;;;;A","sourceRoot":""}