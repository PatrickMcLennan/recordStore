{"version":3,"file":"static/webpack/static/development/pages/index.js.298c0ecff5a8db5e4e03.hot-update.js","sources":["webpack:///./components/Store.js"],"sourcesContent":["import React, { Component } from 'react';\nimport SectionHeader from './SectionHeader';\nimport { StoreSection, RecordGrid } from './styles/Store.styles';\nimport Record from './Record';\nimport Sort from './Sort';\nimport PropTypes from 'prop-types';\n\nclass Store extends Component {\n  state = {\n    ...this.props.user,\n    sort: 'artist'\n  };\n\n  componentDidMount() {\n    const { page, loaded } = this.props;\n    if (page === 'store') return loaded();\n  }\n\n  changeSort = (property = 'artist') => {\n    this.setState({ sort: property });\n    const { records, sort } = this.state;\n    const sortedRecords = records.sort((a, b) =>\n      a[sort].toLowerCase() > b[sort].toLowerCase() ? 1 : -1\n    );\n  };\n\n  renderGrid = () => {\n    const { records, sort } = this.state;\n    const { deleteRecord } = this.props;\n    return sorted.map(record => (\n      <Record\n        artist={record.artist}\n        title={record.title}\n        cover={record.cover}\n        key={record.id}\n        id={record.id}\n        deleteRecord={deleteRecord}\n        renderGrid={this.renderGrid}\n      />\n    ));\n  };\n\n  render() {\n    const { records } = this.state;\n    return (\n      <StoreSection>\n        <SectionHeader first=\"My\" last=\"Store\" />\n        <Sort changeSort={this.changeSort} />\n        <RecordGrid>\n          {records.length >= 1 ? (\n            this.renderGrid()\n          ) : (\n            <h6>Get Started by adding some records!</h6>\n          )}\n        </RecordGrid>\n      </StoreSection>\n    );\n  }\n}\n\nStore.propTypes = {\n  page: PropTypes.string.isRequired,\n  loaded: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  changePage: PropTypes.func.isRequired,\n  deleteRecord: PropTypes.func.isRequired\n};\n\nexport default Store;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;;;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AACA;;;;;;AA5BA;AAAA;AAAA;AAAA;AAEA;AACA;;;AA0BA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAlDA;AACA;AAoDA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;;;;A","sourceRoot":""}